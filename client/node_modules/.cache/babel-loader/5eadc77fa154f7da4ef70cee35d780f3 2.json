{"ast":null,"code":"var _jsxFileName = \"/Users/rayandiouf/Desktop/fb-clone/client/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Sidebar from \"./pages/sidebar/Sidebar\"; // import Feed from \"./Feed\";\n\nimport Widgets from \"./pages/Widgets/Widgets\";\nimport { setContext } from \"@apollo/client/link/context\"; // import Login from \"./Login\";\n\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\"; // import Signup from \"./Signup\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // <ApolloProvider client={client}>\n    // <Router>\n    //   <Routes>\n    //     <Route exact path=\"/\" component={Home} />\n    //     <Route exact path=\"/login\" component={Login} />\n    //     <Route exact path = \"/signup\" compomemt={Signup} />\n    //   </Routes>\n    // </Router>\n    // </ApolloProvider>\n    _jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rayandiouf/Desktop/fb-clone/client/src/App.js"],"names":["React","Header","Sidebar","Widgets","setContext","Home","BrowserRouter","Router","Route","Routes","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,UAAT,QAA2B,6BAA3B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,cAJF,QAKO,gBALP,C,CAMA;;;AAEA,MAAMC,QAAQ,GAAGD,cAAc,CAAC;AAC9BE,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGZ,UAAU,CAAC,CAACa,CAAD,WAAoB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMD,CAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC9Ba,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB;AAE9BY,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFuB,CAAjB,CAAf;;AAIA,SAASe,GAAT,GAAe;AACb;AAAA;AACE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAXF;AAeD;;KAhBQA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Sidebar from \"./pages/sidebar/Sidebar\";\n// import Feed from \"./Feed\";\nimport Widgets from \"./pages/Widgets/Widgets\";\nimport { setContext } from \"@apollo/client/link/context\";\n// import Login from \"./Login\";\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\n// import Signup from \"./Signup\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n}); \nfunction App() {\n  return (\n    // <ApolloProvider client={client}>\n    // <Router>\n    //   <Routes>\n    \n    //     <Route exact path=\"/\" component={Home} />\n    //     <Route exact path=\"/login\" component={Login} />\n    //     <Route exact path = \"/signup\" compomemt={Signup} />\n    //   </Routes>\n    // </Router>\n    // </ApolloProvider>\n    <div className='app'>\n        <Home />\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}